#!/bin/sh

. /lib/functions.sh

PWM_CTRL="/sys/devices/platform/pwm-fan/hwmon/hwmon0/pwm1"
TEMP_SENSOR="/sys/class/thermal/thermal_zone0/temp"

config_load fanh69k
config_get min_start_temp global min_start_temp 35
config_get max_full_temp  global max_full_temp  65
config_get min_pwm        global min_pwm        30
config_get max_pwm        global max_pwm        220
config_get Kp             global Kp             0.8
config_get Ki             global Ki             0.05
config_get Kd             global Kd             0.2
config_get interval       global interval       20

last_error=0
integral=0

while true; do
    temp=$(cat "$TEMP_SENSOR" | awk '{print $1 / 1000}')
    
    if [ "$(echo "$temp <= $min_start_temp" | bc)" -eq 1 ]; then
        target_pwm=$min_pwm
    elif [ "$(echo "$temp >= $max_full_temp" | bc)" -eq 1 ]; then
        target_pwm=$max_pwm
    else
        setpoint=$(echo "scale=1; ($min_start_temp + $max_full_temp)/2" | bc)
        error=$(echo "scale=1; $temp - $setpoint" | bc)
        integral=$(echo "scale=1; $integral + $error * $interval" | bc)
        derivative=$(echo "scale=1; ($error - $last_error) / $interval" | bc)
        output=$(echo "scale=1; $Kp*$error + $Ki*$integral + $Kd*$derivative" | bc)
        
        output=$(echo "$output" | awk -v min=$min_pwm -v max=$max_pwm \
            '{if ($1 > max) print max; else if ($1 < min) print min; else print $1}')
        last_error=$error
        target_pwm=$output
    fi

    current_pwm=$(cat "$PWM_CTRL")
    delta=$((target_pwm - current_pwm))
    
    [ $delta -gt 15 ] && delta=15
    [ $delta -lt -15 ] && delta=-15
    
    final_pwm=$((current_pwm + delta))
    [ $final_pwm -lt 0 ] && final_pwm=0
    [ $final_pwm -gt 255 ] && final_pwm=255
    
    echo $final_pwm > "$PWM_CTRL"
    sleep $interval
done
